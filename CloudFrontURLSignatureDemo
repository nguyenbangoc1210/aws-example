import com.amazonaws.services.cloudfront.CloudFrontUrlSigner;
import com.amazonaws.services.cloudfront.util.SignerUtils;

import java.io.File;
import java.io.IOException;
import java.security.PrivateKey;
import java.security.spec.InvalidKeySpecException;
import java.util.Date;

import static com.amazonaws.services.cloudfront.CloudFrontUrlSigner.buildCustomPolicyForSignedUrl;

public class DemoCloudFrontURLSignature {

    public static void main(String[] argc) throws InvalidKeySpecException, IOException {
        
        // Import aws-java-sdk-cloudfront

        // Signed URLs for a private distribution
        // Note that Java only supports SSL certificates in DER format,
        // so you will need to convert your PEM-formatted file to DER format.
        // To do this, you can use openssl:
        // openssl pkcs8 -topk8 -nocrypt -in origin.pem -inform PEM -out new.der
        //    -outform DER
        // So the encoder works correctly, you should also add the bouncy castle jar
        // to your project and then add the provider.

        String distributionDomain = "d3h30j9mrtpgcx.cloudfront.net";
        String privateKeyFilePath = "C:\\Users\\BNNguyen\\Documents\\aws-cf-key\\private_key.der";
        String s3ObjectKey = "file-testing-02.txt";

        // the private key you created in the AWS Management Console
        PrivateKey cloudFrontPrivateKeyFile = SignerUtils.loadPrivateKey(new File(privateKeyFilePath));

        // the unique ID assigned to your CloudFront key pair in the console
        //Public keys ID in CloudFront console
        String cloudFrontKeyPairId = "KA0QT5EQR5VWH";

        // the CIDR range limiting which IP addresses are allowed to access your content
        // CIDR IP address restriction (optional, 0.0.0.0/0 means everyone)
        String cidrRange = "0.0.0.0/0";
        // the resource path to our content
        Date expirationDate = new Date(System.currentTimeMillis() + 60 * 1000);
        String policyResourcePath = "https://" + distributionDomain + "/" + s3ObjectKey;

        String policy = buildCustomPolicyForSignedUrl(
                policyResourcePath,
                expirationDate,
                cidrRange,
                null);

        String signedUrl = CloudFrontUrlSigner.getSignedURLWithCustomPolicy(
                policyResourcePath,
                cloudFrontKeyPairId,
                cloudFrontPrivateKeyFile,
                policy);

        System.out.println(signedUrl);
    }
}
